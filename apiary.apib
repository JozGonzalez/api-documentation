FORMAT: 1A
HOST: https://api.accredible.com/

# Accredible Credential API
[Accredible](https://www.accredible.com/) Credential API allows you to create and interact with digital certificates called [Accredible Certificates](https://www.accredible.com/10000005). 

# Group Credentials
Credentials are the core object in Accredible. They collect all of the data related to an achievement and a recipient. 

You create a credential for each achievement that a recipient has. For example John Doe finishing the Programming 101 course would align to one credential. If John Doe achieves something else then he would need a new credential.

## Credentials [/v1/credentials{?acheivement_id}{?email}]

### Create a New Credential [POST]

You create a Credential using this action. Please make sure that you've created a cohort on your dashboard before creating a certificate. It takes a JSON object containing a Credential.

+ name (string, required) - The achivement / credential name. This is displayed on certificates.
+ description (string, required) - Details of any learning outcomes and requirements for the achievement. This is displayed on certificates.
+ cohort_name (string, required) - Cohort name is the same as the Cohort name which you [created in the dashboard](https://www.accredible.com/issuer/dashboard/new_cohort). Assigns a credential to a specific cohort (grouping). Make sure you create cohorts BEFORE creating a certificate.
+ recipient.name (string, required) - The name of the recipient the credential is issued to.
+ recipient.email (string, required) - The recipient's email address.
+ issued_on (Date, optional) - Date of issue (the default is when the credential is created).
+ expired_on (Date, optional) - Date you would like the credential to expire on (none by default).
+ complete (boolean, optional) - Whether the achievement is complete or still in progress (true by default).
+ course_link (string, optional) - Link to the web page with information related to this credential. Typically this is a course information or event information page.
+ learning_outcomes (string, optional) - An array of strings that describe any outcomes of the achievement. Typically this would be a list of learning outcomes for a course.
+ evidence_items (array[string], optional) - Evidence to add to this credential, that provide more information about how the recipient met the achievement. See [Evidence Item post](http://docs.accrediblecredentialapi.apiary.io/#reference/evidence-items/evidence-item/create-a-new-evidence-item) for fields). Typically this would include work samples for a course.
+ references (array[string], optional) - References to add to this credential, that provide more information about how the recipient met the achievement. see [Reference post](http://docs.accrediblecredentialapi.apiary.io/#reference/references/reference/create-a-new-reference) for fields). Typically this would be a peer, teacher or manager giving their feedback.
+ custom_attributes (hash[string], optional) - Custom variables to display on the certificate template. These should be added to the cohort template via the dashboard. Data should be a stringified JSON hash where keys are the custom attribute names and values are the values to be displayed on the certificate.
+ allow_supplemental_evidence (boolean, optional) - Whether to allow recipients to add their own supplemental evidence to the credential (true by default).
+ allow_supplemental_references (boolean, optional) - Whether to allow recipients to add their own supplemental references to the credential (true by default).

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY
    
    + Body
    
            {
                "credential": {
                    "recipient": {
                        "name": "John Doe",
                        "email": "person@example.com"
                    },
                "name": "Credential Name",
                "cohort_name": "course1234",
                "description": "A detailed description of what the credential is for",
                "issued_on": "2014-06-14",
                "evidence_items": [
                    { 
                        "description": "Report card including all grades",
                        "url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                        "category": "url"
                    },
                    { 
                        "description": "Final essay",
                        "file": "https://s3.amazonaws.com/accredible_api_evidence_items/files/12/original/open-uri20140316-15266-1m3by6h.jpeg",
                        "category": "file"
                    }
                ],
                "references": [
                    {
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "email": "person2@example.com",
                        "avatar": "https://placehold.it/100x100"
                    },
                    "relationship": "managed"
                    }
                ],
                "custom_attributes": "{\"custom_variable\": \"some value\", \"dob\": \"29th Jan 1970\"}"
                }
            }
            

+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "cohort_name": "course1234",
            "achievement_id": "course1234",
            "grade": null,
            "badges": null,
            "learning_outcomes": null,
            "complete": true,
            "expired_on": null,
            "custom_attibutes": "{\"custom_variable\": \"some value\", \"dob\": \"29th Jan 1970\"}"
            "course_link": null,
            "provider_image_url": null,
            "sample": false,
            "language": "en",
            "evidence_items": [
                { 
                    "id": 1234,
                    "description": "Report card including all grades",
                    "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                    "preview_image_url": "https://www.example.com/1234/reportcard.png",
                    "type": "url",
                    "supplemental": false,
                    "position": 1
                },
                { 
                    "id": 12345,
                    "description": "Final essay",
                    "link_url": "https://www.accredible.com/1234/essay.doc",
                    "preview_image_url": "https://www.example.com/1234/essay.png",
                    "type": "file",
                    "supplemental": false,
                    "position": 2
                }
            ],
            "references": [
                {
                    "id": 1234,
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                    },
                    "supplemental": false,
                    "relationship": "managed"
                }
            ]},
        }

### View all Credentials [GET]

+ Parameters
    + acheivement_id (string, optional) - Limit the returned credentials to a specific acheivement, cohort/template or course ID.
    + email (string, optional) - Limit the returned credentials to a specific recipient's email address.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

+ Response 200 (application/json)

        {
            "credentials": [{
                id: 1234,
                recipient: {
                    "name": "John Doe"
                },
                issuer: {
                    "name": "Course Provider",
                    "url": "http://www.awesomelearningexample.com",
                    "description": "Technical courses at an introductory level...",
                    "image_url": "http://www.example.com/logo.png"
                },
                name: "Credential Name",
                description: "A detailed description of what the credential is for",
                issued_on: "2014-06-14",
                provider_image_url: "https://www.example.com/1234/provider.png",
                language: "en",
                evidence_items: [
                    { 
                        "id": 1234,
                        "description": "Report card including all grades",
                        "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                        "preview_image_url": "https://www.example.com/1234/reportcard.png",
                        "type": "url",
                        "position": 1
                    },
                    { 
                        "id": 12345,
                        "description": "Final essay",
                        "link_url": "https://www.accredible.com/1234/essay.doc",
                        "preview_image_url": "https://www.example.com/1234/essay.png",
                        "type": "file",
                        "position": 2
                    }
                ],
                references: [
                    {
                        "id": 1234,
                        "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                        "referee": {
                            "name": "Jane Doe",
                            "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                        },
                        "relationship": "managed"
                    }
                ]
            },
            {
                id: 12345,
                recipient: {
                    "name": "John Doe"
                },
                issuer: {
                    "name": "Course Provider",
                    "url": "http://www.awesomelearningexample.com",
                    "description": "Technical courses at an introductory level...",
                    "image_url": "http://www.example.com/logo.png",
                    "style_preference": {
                        "font": "Arial",
                        "watermark_image_url": "https://www.example.com/1234/watermark.png",
                        "signature_image_url": "https://www.example.com/1234/signature.png"
                    }
                },
                name: "Credential Name",
                description: "A detailed description of what the credential is for",
                issued_on: "2014-06-14",
                provider_image_url: "https://www.example.com/1234/provider.png",
                evidence_items: [
                    { 
                        "id": 1234,
                        "description": "Report card including all grades",
                        "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                        "preview_image_url": "https://www.example.com/1234/reportcard.png",
                        "type": "url",
                        "position": 1
                    },
                    { 
                        "id": 12345,
                        "description": "Final essay",
                        "link_url": "https://www.accredible.com/1234/essay.doc",
                        "preview_image_url": "https://www.example.com/1234/essay.png",
                        "type": "file",
                        "position": 2
                    }
                ],
                references: [
                    {
                        "id": 1234,
                        "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                        "referee": {
                            "name": "Jane Doe",
                            "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                        },
                        "relationship": "managed"
                    }
                ]
            }]
        }



## Credential [/v1/credentials/{credential_id}]

### View a Credential [GET]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    
+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "template_name": "course1234",
            "achievement_id: "course1234",
            "grade": null,
            "badges": null,
            "learning_outcomes": null,
            "complete": true,
            "expired_on": null,
            "custom_attributes": null,
            "course_link": null,
            "provider_image_url": null,
            "sample": false,
            "language": "en",
            "evidence_items": [
                { 
                    "id": 1234,
                    "description": "Report card including all grades",
                    "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                    "preview_image_url": "https://www.example.com/1234/reportcard.png",
                    "type": "url",
                    "supplemental": false,
                    "position": 1
                },
                { 
                    "id": 12345,
                    "description": "Final essay",
                    "link_url": "https://www.accredible.com/1234/essay.doc",
                    "preview_image_url": "https://www.example.com/1234/essay.png",
                    "type": "file",
                    "supplemental": false,
                    "position": 2
                }
            ],
            "references": [
                {
                    "id": 1234,
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                    },
                    "supplemental": false,
                    "relationship": "managed"
                }
            ]}
        }


### Update a Credential [PUT]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Body
            
            {
              "credential": {
                "name": "Updated Credential Name"
                }
            }
            
+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "cohort_name": "course1234",
            "achievement_id: "course1234",
            "grade": null,
            "badges": null,
            "learning_outcomes": null,
            "complete": true,
            "expired_on": null,
            "custom_attributes": null,
            "course_link": null,
            "provider_image_url": null,
            "sample": false,
            "language": "en",
            "evidence_items": [
                { 
                    "id": 1234,
                    "description": "Report card including all grades",
                    "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                    "preview_image_url": "https://www.example.com/1234/reportcard.png",
                    "type": "url",
                    "supplemental": false,
                    "position": 1
                },
                { 
                    "id": 12345,
                    "description": "Final essay",
                    "link_url": "https://www.accredible.com/1234/essay.doc",
                    "preview_image_url": "https://www.example.com/1234/essay.png",
                    "type": "file",
                    "supplemental": false,
                    "position": 2
                }
            ],
            "references": [
                {
                    "id": 1234,
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                    },
                    "supplemental": false,
                    "relationship": "managed"
                }
            ]}
        }


### Delete a Credential [DELETE]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "cohort_name": "course1234",
            "achievement_id": "course1234",
            "language": "en",
            "grade": null,
            "badges": null,
            "learning_outcomes": null,
            "complete": true,
            "expired_on": null,
            "custom_attributes": null,
            "course_link": null,
            "provider_image_url": null,
            "sample": false,
            }
        }


# Group Templates
Template is just another name for Cohort. Resources related to Templates. Templates provide a visual specification for how a Credential should be rendered.

## Templates [/v1/issuer/templates]

### View all Templates [GET]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
          "templates": [
            {
              "name": "TRADITIONAL",
              "id": 60
            },
            {
              "name": "The Fullbridge Finance Intensive at Colorado College",
              "id": 1468
            },
            {
              "name": "MODERN",
              "id": 1787
            },
            {
              "name": "T&S Health",
              "id": 1828
            }]
        }


## Copy Template [/v1/issuer/templates/copy]

### Copy a Template [POST]

Template is just another name for Cohort. You copy a old template which create new template using this action. 

+ source_id (string, required)  - Id of the source template. You can use all template endpoint to see the ids of the template in your account. 
+ template_name (string, required) - Name of the new template. It should be unique, no old template with this name.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Body
            
            {
             "source_id": "34", "template_name": "Sample Template"
            }
            
            
+ Response 200 (application/json)

        {
          "template": {
            "id": 12472,
            "name": "Sample Template",
            "color": "#FFF",
            "background": "https://s3.amazonaws.com/accredible-api-templates/143497667059915",
            "mobile_background": "https://s3.amazonaws.com/accredible-api-templates/143497766059915",
            "course_description": "This is just a test",
            "learning_outcomes": [],
            "course_link": "http://www.example.com",
            "course_name": "Sample Course name"
            }
        }
        

## Template [/v1/issuer/template/{template_id}]


### Delete a Template [DELETE]

+ Parameters
    + template_id (number) - Global ID of the template in the form of an integer for the particular template requested.  You can see template id from the all templates request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
          "template": {
            "id": 12472,
            "name": "Sample Template",
            "color": "#FFF",
            "background": "https://s3.amazonaws.com/accredible-api-templates/143497667059915",
            "mobile_background": "https://s3.amazonaws.com/accredible-api-templates/143497766059915",
            "course_description": "This is just a test",
            "learning_outcomes": [],
            "course_link": "http://www.example.com",
            "course_name": "Sample Course name"
            }
        }

# Group Evidence Items
Resources realted to EvidenceItems. EvidenceItems provide more information about how the recipient met the achievement. Typically this would include work samples for a course.

## Evidence Items [/v1/credentials/{credential_id}/evidence_items]

### Create a New Evidence Item [POST]

You create EvidenceItems using this action. It takes a JSON object containing an Evidence Item.

+ description (string, required) - Title text for the evidence item. This is displayed on a certificate.
+ category (string, required) - Type of Evidence Item added, must be one of [file, url, video, grade, transcript]. The type dictates how the item is displayed on the certificate.
+ url (string, optional) - If the category is url or video, this should be the URL of Evidence Item.
+ file (string, optional) - If the category is file, this should be the file's URL.
+ string_object (string, optional) - If the category is grade or transcript this field stores the data. For grade it should be a string to string object (ex: "string_object": "83") and for transcript stringify json (ex: "string_object": "[{\"category\":\"Homework\",\"percent\":80}]")
+ preview (string, optional) - By default if you add a URL category EvidenceItem, we take a screenshot to set the preview of this URL on certificates. You can overwrite this default behaviour by setting this preview field to be the URL of the desired image.
+ position (integer, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.
+ custom_insight (string, optional) - The insights which will appear below Evidence Item, if not given it will be generated automatically based on data.

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Body
            
            {
                "evidence_item": {
                "description": "Example file", 
                "file": "http://www.antennahouse.com/XSLsample/pdf/sample-link_1.pdf",
                "category": "file"
                }
            }

+ Response 200 (application/json)

        {
            "evidence_item": { 
            "id": 1234,
            "description": "Report card including all grades",
            "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }

## Evidence Item [/v1/credentials/{credential_id}/evidence_items/{evidence_item_id}]

### View a Evidence Item [GET]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    + evidence_item_id (number) - Gobal ID of the EvidenceItem in the form of an integer.
    
+ Response 200 (application/json)

        {
            "evidence_item": { 
            "id": 1234,
            "description": "Report card including all grades",
            "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }
 

### Update a Evidence Item [PUT]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    + evidence_item_id (number) - Global ID of the Evidence Item in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Body
            
            {
                "evidence_item": {
                    "description": "My new description"
                }
            }
            
+ Response 200 (application/json)

        {
            "evidence_item": { 
            "id": 1234,
            "description": "Report card including all grades",
            "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }



### DELETE a Evidence Item [DELETE]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    + evidence_item_id (number) - Global ID of the EvidenceItem in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
            "evidence_item": { 
                "id": 1234,
                "description": "Report card including all grades"
            }
        }


# Group References
Resources realted to References. References provide more information about how the recipient met an achievement. Typically this would be a peer, teacher or manager giving their feedback.

## References [/v1/credentials/{credential_id}/references]

### Create a New Reference [POST]

You may create a Reference using this action. It takes a JSON object containing a Reference.

+ description (string, required) - The reference comments / text.
+ relationship (string, required) - Must be one of: “taught”, “managed”, “mentored”, “worked”, “studied”, “friends”, “stranger”, “professor”. 
+ referee.name (string, optional) - Name of the person providing the reference.
+ referee.email (string, optional) - Email of the person providing the reference.
+ referee.avatar (string, optional) - URL of image of the person providing the reference.
+ referee.url (string, optional) - URL of a social profile (such as LinkedIn) that would allow a viewer to learn more about the referee.
+ position (integer, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
 
+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Body
    
            {
                "reference": {
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "email": "person@example.com",
                        "avatar": "https://placehold.it/100x100"
                        },
                    "relationship": "managed"
                }
            }

+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }

## Reference [/v1/credentials/{credential_id}/references/{reference_id}]


### View a Reference [GET]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    + reference_id (number) - Global ID of the Reference in the form of an integer.
    
+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }

### Update a Reference [PUT]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    + reference_id (number) - Global ID of the Reference in the form of an integer.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Body
            
            {
                "reference": {
                    "description": "my new reference text"
                }
            }
            
+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }



### DELETE a Reference [DELETE]

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.
    + reference_id (number) - Global ID of the Reference in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }
FORMAT: 1A
HOST: https://api.accredible.com/

# Accredible Credential API
The [Accredible](https://www.accredible.com/) Credential API allows you to create and interact with digital certificates called [Accredible Certificates](https://www.accredible.com/10000005). 

There are 3 main objects in Accredible:

# Credentials
[Credentials](http://docs.accrediblecredentialapi.apiary.io/#reference/credentials) are the core object in the API. They collect all of the data related to a course, training acitivity or achievment and the recipient/participant information. 

You should create a credential for each achievement completion that a recipient has. For example if John Doe finishes the Programming 101 course we should create one credential to represent that. If John Doe achieves something else then he would need a new credential.

# Groups
[Groups](http://docs.accrediblecredentialapi.apiary.io/#reference/groups) are similar to a folder or a course. They contain information about the achievement and have multiple Credentials attached to them.

For example you should create a group for the Introduction to Programming course. You'd provide the Course Name, Course Descripion and Course URL. In the future you can pass the name or ID of this group when creating a credential so that the credential is passed all the information relating to the achievement.

# Designs
[Designs](http://docs.accrediblecredentialapi.apiary.io/#reference/designs) provide a visual specification for how a Credential should be rendered. Design can be used accross multiple Groups.

For example if we have three courses: Intro to Basic Programming, Intro to Advanced Programming and Intro to DevOps each of these may have the same design for their Credentials. When creating or updating their corresponding Groups you would attach the desired design accordingly.

#Group Quick Start
In this quick start tutorial, we assume you have already created your first group. If you haven't then go to [create a group in the dashboard](https://www.accredible.com/issuer/dashboard/group/new/settings) or use [this API request](http://docs.acms.apiary.io/#reference/groups/groups/create-a-group). 

To get you up and running the example below shows you how to create a basic Credential.

### Credentials [/v1/credentials]

#### Create a Credential [POST]

Create a Credential using this action. It requires a JSON object containing a Credential.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY
    
    + Attributes
        + recipient.name (string, required) - The name of the recipient the credential is issued to.
        + recipient.email (string, required) - The recipient's email address.
        + group_name (string, required) -  Group name to which the credential should belong.
    
    + Body
    
            {
                "credential": {
                    "recipient": {
                        "name": "John Doe",
                        "email": "person@example.com"
                    },
                    "group_name": "Test Group"
                }
            }
            

+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "group_name": "Test Group",
            "grade": null,
            "complete": true,
            "expired_on": null,
            "custom_attibutes": null,
            "course_link": null
        }

# Group Credentials
Credentials are the core object in Accredible. They collect all of the data related to a course/training/achievment and a recipient. 

You should create a credential for each achievement completion that a recipient has. For example if John Doe finishes the Programming 101 course we should create one credential to represent that. If John Doe achieves something else then he would need a new credential.

## Credentials [/v1/credentials]

#### Create a New Credential [POST]

You create a Credential with optional EvidenceItems and References using this action. Please make sure that you've created a group on your dashboard before creating a Credential. If you haven't then [create a group the dashboard](https://www.accredible.com/issuer/dashboard/group/new/settings) or use [this API request](http://docs.acms.apiary.io/#reference/groups/groups/create-a-group). 

This endpoint requires a JSON object containing a Credential.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY
    
    + Attributes
        + recipient.name (string, required) - The name of the recipient the credential is issued to.
        + recipient.email (string, required) - The recipient's email address.
        + group_name (string, required) -  Group name to which credential should belong to.
        + name (string, optional) - The Credential/course name displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Name set.
        + description (string, optional) - The credential/course description displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Description set.
        + custom_attributes (object, optional) - Custom variables to display on the Credential. These should be added to the design using the visual editor. Data should be formatted as a JSON hash where keys are the custom attribute names and the values are the values to be displayed on the Credential.
        + issued_on (string, optional) - Date of issue, the default is when the credential is created. 
        + expired_on (string, optional) - Date you would like the credential to expire on, null by default.
        + complete (boolean, optional) - Whether the achievement is complete or still in progress, true by default.
        + allow_supplemental_evidence (boolean, optional) - Whether to allow recipients to add their own supplemental evidence to the Credential, true by default.
        + allow_supplemental_references (boolean, optional) - Whether to allow recipients to add their own supplemental references to the credential, true by default.
        + evidence_items (array, optional) - Evidence to add to this credential, that provide more information about how the recipient met the achievement. See http://docs.accrediblecredentialapi.apiary.io/#reference/evidence-items/evidence-item/create-a-new-evidence-item for fields. Typically this would include work samples for a course.
        + references (array, optional) - References to add to this Credential, that provide more information about how the recipient met the achievement. see http://docs.accrediblecredentialapi.apiary.io/#reference/references/reference/create-a-new-reference for fields. Typically this would be a peer, teacher or manager giving their feedback.
    
    
    
    + Body
    
            {
                "credential": {
                    "recipient": {
                        "name": "John Doe",
                        "email": "person@example.com"
                    },
                "name": "Credential Name",
                "group_name": "course1234",
                "description": null,
                "issued_on": "2014-06-14",
                "evidence_items": [
                    { 
                        "description": "Report card including all grades",
                        "url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                        "category": "url"
                    },
                    { 
                        "description": "Final essay",
                        "file": "https://s3.amazonaws.com/accredible_api_evidence_items/files/12/original/open-uri20140316-15266-1m3by6h.jpeg",
                        "category": "file"
                    }
                ],
                "references": [
                    {
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "email": "person2@example.com",
                        "avatar": "https://placehold.it/100x100"
                    },
                    "relationship": "managed"
                    }
                ],
                "custom_attributes": {"custom_variables": "some value", "dob": "29 jan 1970"}
                }
            }
            

+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "group_name": "course1234",
            "grade": null,
            "complete": true,
            "expired_on": null,
            "custom_attibutes": {
                    "custom_variables": "some value",
                    "dob": "29 jan 1970"
            },
            "course_link": null,
            "evidence_items": [
                { 
                    "id": 1234,
                    "description": "Report card including all grades",
                    "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                    "preview_image_url": "https://www.example.com/1234/reportcard.png",
                    "type": "url",
                    "supplemental": false,
                    "position": 1
                },
                { 
                    "id": 12345,
                    "description": "Final essay",
                    "link_url": "https://www.accredible.com/1234/essay.doc",
                    "preview_image_url": "https://www.example.com/1234/essay.png",
                    "type": "file",
                    "supplemental": false,
                    "position": 2
                }
            ],
            "references": [
                {
                    "id": 1234,
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                    },
                    "supplemental": false,
                    "relationship": "managed"
                }
            ]},
        }
        
## Credential [/v1/credentials/{credential_id}]

### View a Credential [GET]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.

+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "group_name": "course1234",
            "grade": null,
            "complete": true,
            "expired_on": null,
            "custom_attibutes": {
                    "custom_variables": "some value",
                    "dob": "29 jan 1970"
            },
            "course_link": null,
            "evidence_items": [
                { 
                    "id": 1234,
                    "description": "Report card including all grades",
                    "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                    "preview_image_url": "https://www.example.com/1234/reportcard.png",
                    "type": "url",
                    "supplemental": false,
                    "position": 1
                },
                { 
                    "id": 12345,
                    "description": "Final essay",
                    "link_url": "https://www.accredible.com/1234/essay.doc",
                    "preview_image_url": "https://www.example.com/1234/essay.png",
                    "type": "file",
                    "supplemental": false,
                    "position": 2
                }
            ],
            "references": [
                {
                    "id": 1234,
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                    },
                    "supplemental": false,
                    "relationship": "managed"
                }
            ]},
        }


### Update a Credential [PUT]

+ Parameters
    + credential_id (number) - ID of the credential in the form of an integer for the particular Credential requested.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    + Attributes
        + recipient.name (string, required) - The name of the recipient the credential is issued to.
        + recipient.email (string, required) - The recipient's email address.
        + group_name (string, required) -  Group name to which credential should belong to.
        + name (string, optional) - The Credential/course name displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Name set.
        + description (string, optional) - The credential/course description displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Description set.
        + custom_attributes (object, optional) - Custom variables to display on the Credential. These should be added to the design using the visual editor. Data should be formatted as a JSON hash where keys are the custom attribute names and the values are the values to be displayed on the Credential.
        + issued_on (string, optional) - Date of issue, the default is when the credential is created. 
        + expired_on (string, optional) - Date you would like the credential to expire on, null by default.
        + complete (boolean, optional) - Whether the achievement is complete or still in progress, true by default.
        + allow_supplemental_evidence (boolean, optional) - Whether to allow recipients to add their own supplemental evidence to the Credential, true by default.
        + allow_supplemental_references (boolean, optional) - Whether to allow recipients to add their own supplemental references to the credential, true by default.
        + evidence_items (array, optional) - Evidence to add to this credential, that provide more information about how the recipient met the achievement. See http://docs.accrediblecredentialapi.apiary.io/#reference/evidence-items/evidence-item/create-a-new-evidence-item for fields. Typically this would include work samples for a course.
        + references (array, optional) - References to add to this Credential, that provide more information about how the recipient met the achievement. see http://docs.accrediblecredentialapi.apiary.io/#reference/references/reference/create-a-new-reference for fields. Typically this would be a peer, teacher or manager giving their feedback.
    
    + Body
            
            {
              "credential": {
                "complete": true
                }
            }
            
+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "group_name": "course1234",
            "grade": null,
            "complete": true,
            "expired_on": null,
            "custom_attibutes": {
                    "custom_variables": "some value",
                    "dob": "29 jan 1970"
            },
            "course_link": null,
            "evidence_items": [
                { 
                    "id": 1234,
                    "description": "Report card including all grades",
                    "link_url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                    "preview_image_url": "https://www.example.com/1234/reportcard.png",
                    "type": "url",
                    "supplemental": false,
                    "position": 1
                },
                { 
                    "id": 12345,
                    "description": "Final essay",
                    "link_url": "https://www.accredible.com/1234/essay.doc",
                    "preview_image_url": "https://www.example.com/1234/essay.png",
                    "type": "file",
                    "supplemental": false,
                    "position": 2
                }
            ],
            "references": [
                {
                    "id": 1234,
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "avatar_image_url": "https://www.example.com/avatars/janedoe.png"
                    },
                    "supplemental": false,
                    "relationship": "managed"
                }
            ]},
        }

### Delete a Credential [DELETE]

+ Parameters
    + credential_id (number) - ID of the credential in the form of an integer for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe"
                },
            "issuer": {
                "name": "Course Provider",
                "url": "http://www.awesomelearningexample.com",
                "description": "Technical courses at an introductory level..."
            },
            "name": "Credential Name",
            "description": "A detailed description of what the credential is for",
            "issued_on": "2014-06-14",
            "group_name": "course1234",
            "grade": null,
            "complete": true,
            "expired_on": null,
            "custom_attributes": null,
            "course_link": null
            }
        }

## All Credentials [/v1/all_credentials{?group_id}{?email}{?page_size}{?page}]

### View many Credentials [GET]

+ Parameters
    + group_id (string, optional) - Limit the returned Credentials to a specific group ID.
    + email (string, optional) - Limit the returned Credentials to a specific recipient's email address.
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

+ Response 200 (application/json)

        {
            "credentials": [
            {
                "id": 10250009,
                "name": "TestCourse",
                "description": "Test Description",
                "grade": null,
                "complete": true,
                "issued_on": "2015-07-03T07:10:04.000Z",
                "allow_supplemental_references": null,
                "allow_supplemental_evidence": null,
                "course_link": "http://example.com",
                "custom_attributes": null,
                "expired_on": null,
                "group_name": "test",
                "evidence_items": [],
                "references": [],
                "recipient": {
                    "name": "John Doe"
                },
                "issuer": {
                    "name": "Example Provider",
                    "description": " Best place to manage online learning",
                    "url": "http://www.accredible.com"
                }
            },
            {
                "id": 10250010,
                "name": "TestCourse",
                "description": "Test Description",
                "grade": null,
                "complete": true,
                "issued_on": "2015-07-03T07:10:04.000Z",
                "allow_supplemental_references": null,
                "allow_supplemental_evidence": null,
                "course_link": "http://example.com",
                "custom_attributes": null,
                "expired_on": null,
                "group_name": "test",
                "evidence_items": [],
                "references": [],
                "recipient": {
                    "name": "John Doe"
                },
                "issuer": {
                    "name": "Example Provider",
                    "description": " Best place to manage online learning",
                    "url": "http://www.accredible.com"
                }
            }
        ],
           "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 795,
                "total_count": 1590
            }
        }




# Group Groups
Groups are similar to a course or a folder of Credentials. They contain information about the achievement and have multiple Credentials attached to them.

For example you should create a group for the Introduction to Programming course. You'd provide the Course Name, Course Descripion and Course URL. In the future you can pass the name or ID of this group when creating a credential so that the credential is passed all the information relating to the achievement.

## Groups [/v1/issuer/groups]

### Create a Group [POST]
    
+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY
    
    + Attributes
        + name (string,required) - Name of the group (for your reference and never shown to the recipient).
        + course_name (string,required) - Name of the course or achievement. This is visible to the recipient.
        + course_description (string,required) - Description of the course or achievement. This is visible to the recipient.
        + course_link (string,optional) - Link to the web page with information related to this Credential. Typically this is a course information or event information page.
        + langauge (string, optional) - Language for the group. Currently we support "en", "es" and "pt". Default language is en.
        + attach_pdf (boolean, optional) - PDF of the Credential should be attached to email when recipient is informed. Default is false.
        + design_id (number,optional) - Design which the Group will use to display Credentials.
    
    + Body
    
            {
                "group": {
                    "name": "new group",
                    "course_name": "Intro to Prgramming",
                    "course_description": "Description of course",
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "attach_pdf": true,
                    "design_id": null
                }
            }
            
            
+ Response 200 (application/json)

        {
          "group": {
            "id": 12472,
            "name": "new group",
            "course_description": "Desscription of course",
            "course_name": "Intro to Programming",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test".
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23
            }
        }

## Group [/v1/issuer/groups/{group_id}]

### View a Group [GET]
+ Parameters
    + group_id (number) - ID of the group in the form of an integer for the particular group requested.  You can obtain the group ID from the all groups request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
          "group": {
            "id": 12472,
            "name": "new group",
            "course_description": "Desscription of course",
            "course_name": "Intro to Programming",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test".
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23
            }
        }


### Update a Group [PUT]

+ Parameters
    + group_id (number) - ID of the group in the form of an integer for the particular group requested. You can obtain the group ID from the all groups request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Attributes
        + name (string,required) - Name of the group (for your reference and never shown to the recipient).
        + course_name (string,required) - Name of the course or achievement. This is visible to the recipient.
        + course_description (string,required) - Description of the course or achievement. This is visible to the recipient.
        + course_link (string,optional) - Link to the web page with information related to this Credential. Typically this is a course information or event information page.
        + langauge (string, optional) - Language for the group. Currently we support "en", "es" and "pt". Default language is en.
        + attach_pdf (boolean, optional) - PDF of the Credential should be attached to email when recipient is informed. Default is false.
        + design_id (number,optional) - Design which the Group will use to display Credentials.
            
    + Body
    
            {
               "group": {
                    "name": "updated new group",
                    "course_name": "updated course name"
                }
            }
            
+ Response 200 (application/json)

        {
          "group": {
            "id": 12472,
            "name": "updated new group",
            "course_description": "Desscription of course",
            "course_name": "updated course name",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test".
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23
            }
        }
        
### Delete a Group [DELETE]

+ Parameters
    + group_id (number) - ID of the Group in the form of an integer for the particular Group requested. You can obtain the Group ID from the all groups request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
          "group": {
            "id": 12472,
            "name": "new group",
            "course_description": "Desscription of course",
            "course_name": "Intro to Programming",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test".
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23
            }
        }


## All Groups [/v1/issuer/all_groups{?page_size}{?page}]


### View all Groups [GET]

+ Parameters
    + page_size(number, optional) - The pagination response size, defualt is 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)
    
    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "groups": [
                {
                    "id": 12472,
                    "name": "new group",
                    "course_description": "Desscription of course",
                    "course_name": "Intro to Programming",
                    "learning_outcomes": null,
                    "attach_pdf": true,
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "design_name": "test".
                    "updated_at": "2016-08-29T07:03:25.000Z",
                    "created_at": "2016-08-29T06:14:18.000Z",
                    "design_id": 23
                },
                {
                    "id": 12473,
                    "name": "new group",
                    "course_description": "Desscription of course",
                    "course_name": "Intro to Programming",
                    "learning_outcomes": null,
                    "attach_pdf": false,
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "design_name": "test".
                    "updated_at": "2016-08-29T07:03:25.000Z",
                    "created_at": "2016-08-29T06:14:18.000Z",
                    "design_id": 23
                }
            ],
            "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 119,
                "total_count": 238
            }
        }


# Group Designs 

## Designs [/v1/issuer/all_designs]
Designs provide a visual specification for how a Credential should be rendered. Design can be used accross multiple Groups.

For example if we have three courses: Intro to Basic Programming, Intro to Advanced Programming and Intro to DevOps each of these may have the same design for their Credentials. When creating or updating their corresponding Groups you would attach the desired design accordingly.

### View all Designs [GET]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "designs": [
                        {
                            "id": 56201,
                            "name": "design 1",
                            "updated_at": "2016-08-30T10:26:26.000Z",
                            "created_at": "2016-07-18T23:34:01.000Z",
                            "groups": [
                                        {
                                            "id": 61267,
                                            "name": "group 1",
                                            "updated_at": "2016-08-30T10:26:25.000Z",
                                            "credentials_count": 1
                                        }
                                    ]
                        },
                        {
                            "id": 56231,
                            "name": "design 2",
                            "updated_at": "2016-08-30T10:26:26.000Z",
                            "created_at": "2016-07-18T23:34:01.000Z",
                            "groups": [
                                        {
                                            "id": 61367,
                                            "name": "group 2",
                                            "updated_at": "2016-08-30T10:26:25.000Z",
                                            "credentials_count": 1
                                        }
                                    ]
                        }
                    ]
        }



# Group Evidence Items
Resources realted to EvidenceItems. EvidenceItems provide more information about how the recipient met the achievement. Typically this would include work samples for a course.

## Evidence Items [/v1/credentials/{credential_id}/evidence_items]

### Create a New Evidence Item [POST]

You create EvidenceItems using this action. It takes a JSON object containing an Evidence Item.

+ Parameters
    + credential_id (number) - Global ID of the credential in the form of an integer for the particular Credential requested.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Attributes
        + description (string, required) - Title text for the evidence item. This is displayed on a Credential.
        + category (string, required) - Type of Evidence Item added, must be one of [file, url, video, grade, transcript]. The type dictates how the item is displayed on the certificate.
        + url (string, optional) - If the category is url or video, this should be the URL of Evidence Item.
        + file (string, optional) - If the category is file, this should be the file's URL.
        + string_object (string, optional) - If the category is grade or transcipt then use it. For grade it will be just string 83.
        + preview (string, optional) - By default if you add a URL category EvidenceItem, we take a screenshot to set the preview of this URL on Credential. You can overwrite this default behaviour by setting this preview field to be the URL of the desired image.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.
        + custom_insight (string, optional) - The insights which will appear below Evidence Item, if not given it will be generated automatically based on data.

    
    + Body
            
            {
                "evidence_item": {
                "description": "Example file", 
                "file": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
                "category": "file"
                }
            }

+ Response 200 (application/json)

         {
            "evidence_item": { 
            "id": 1234,
            "description": "updated description",
            "link_url": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }

## Evidence Item [/v1/credentials/{credential_id}/evidence_items/{evidence_item_id}]

### View a Evidence Item [GET]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
    + evidence_item_id (number) - ID of the EvidenceItem in the form of an integer.
    
+ Response 200 (application/json)

        {
            "evidence_item": { 
            "id": 1234,
            "description": "updated description",
            "link_url": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }
 

### Update a Evidence Item [PUT]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
    + evidence_item_id (number) - ID of the Evidence Item in the form of an integer.
    
+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Attributes
        + description (string, required) - Title text for the evidence item. This is displayed on a Credential.
        + category (string, required) - Type of Evidence Item added, must be one of [file, url, video, grade, transcript]. The type dictates how the item is displayed on the Credential.
        + url (string, optional) - If the category is url or video, this should be the URL of Evidence Item.
        + file (string, optional) - If the category is file, this should be the file's URL.
        + string_object (string, optional) - If the category is grade or transcipt then use it. For grade it will be just string 83.
        + preview (string, optional) - By default if you add a URL category EvidenceItem, we take a screenshot to set the preview of this URL on Credentials. You can overwrite this default behaviour by setting this preview field to be the URL of the desired image.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.
        + custom_insight (string, optional) - The insights which will appear below Evidence Item, if not given it will be generated automatically based on data.

    
    + Body
            
            {
                "evidence_item": {
                    "description": "updated description"
                }
            }
            
+ Response 200 (application/json)

        {
            "evidence_item": { 
            "id": 1234,
            "description": "updated description",
            "link_url": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }



### DELETE a Evidence Item [DELETE]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
    + evidence_item_id (number) - ID of the EvidenceItem in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
            "evidence_item": { 
                "id": 1234,
                "description": "Report card including all grades"
            }
        }


# Group References
Resources realted to References. References provide more information about how the recipient met an achievement. Typically this would be a peer, teacher or manager giving their feedback.

## References [/v1/credentials/{credential_id}/references]

### Create a New Reference [POST]

You may create a Reference using this action. It takes a JSON object containing a Reference.

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
 
+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    + Attributes
        + description (string, required) - The reference comments / text.
        + relationship (string, required) - Must be one of: “taught”, “managed”, “mentored”, “worked”, “studied”, “friends”, “stranger”, “professor”. 
        + referee.name (string, optional) - Name of the person providing the reference.
        + referee.email (string, optional) - Email of the person providing the reference.
        + referee.avatar (string, optional) - URL of image of the person providing the reference.
        + referee.url (string, optional) - URL of a social profile such as LinkedIn that would allow a viewer to learn more about the referee.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.

    
    + Body
    
            {
                "reference": {
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "email": "person@example.com",
                        "avatar": "https://placehold.it/100x100"
                        },
                    "relationship": "managed"
                }
            }

+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }


## Reference [/v1/credentials/{credential_id}/references/{reference_id}]


### View a Reference [GET]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
    + reference_id (number) - ID of the Reference in the form of an integer.
 
+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }

### Update a Reference [PUT]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
    + reference_id (number) - ID of the Reference in the form of an integer.

  

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
    
    
    + Attributes
        + description (string, required) - The reference comments / text.
        + relationship (string, required) - Must be one of: “taught”, “managed”, “mentored”, “worked”, “studied”, “friends”, “stranger”, “professor”. 
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.

    + Body
            
            {
                "reference": {
                    "description": "my new reference text"
                }
            }
            
+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }



### DELETE a Reference [DELETE]

+ Parameters
    + credential_id (number) - ID of the Credential in the form of an integer for the particular Credential requested.
    + reference_id (number) - ID of the Reference in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY
            
+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "avatar_image_url": "https://www.example.com/avatars/janedoe.png",
                    "url": "http://www.linkedin.com/in/example"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }